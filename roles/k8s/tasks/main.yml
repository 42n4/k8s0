---

- name: "Copy docker hyperkube image"
  copy:
    src: "{{ playbook_dir }}/images/hyperkube.{{ hyperkube_version }}.tar"
    dest: "{{ stage_dir }}/hyperkube.{{ hyperkube_version }}.tar"

- name: "Import docker hyperkube image"
  command: "docker load --input {{ stage_dir }}/hyperkube.{{ hyperkube_version }}.tar"

- name: "Copy docker pause image"
  copy:
    src: "{{ playbook_dir }}/images/pause-amd64.{{ pause_version }}.tar"
    dest: "{{ stage_dir }}/pause-amd64.{{ pause_version }}.tar"

- name: "Import docker pause image"
  command: "docker load --input {{ stage_dir }}/pause-amd64.{{ pause_version }}.tar"

- name: "Make kubelet certificates dir"
  file:
    path: "{{ kubelet_config_dir }}/cert"
    state: directory
    mode: 0755

- name: "Make kubelet static pods dir"
  file:
    path: "{{ kubelet_config_dir }}/manifests"
    state: directory
    mode: 0755

- name: "Copy k8s cert"
  copy:
    src: "{{ item }}"
    dest: "{{ kubelet_config_dir }}/cert/"
  with_items:
    - ca.crt
    - kubelet.key
    - kubelet.crt
    - server.key
    - server.crt

- name: "Create kubelet config file"
  template:
    src: node-kubeconfig.yml.j2
    dest: "{{ kubelet_config_dir }}/node-kubeconfig.yml"

- name: "Create apiserver yml"
  template:
    src: apiserver.yml.j2
    dest: "{{ kubelet_config_dir }}/manifests/apiserver.yml"

- name: "Run kubelet"
  command: >
    docker run --net=host
    --net=host
    --pid=host
    --name {{ kubelet_container_name }}
    --privileged
    -v /var/run:/var/run
    -v {{ kubelet_config_dir }}:/etc/kubernetes
    -v /etc/resolv.conf:/etc/resolv.conf 
    -d
    hyperkube:{{ hyperkube_version }} kubelet
    --kubeconfig=/etc/kubernetes/node-kubeconfig.yml
    --allow-privileged=true
    --pod-manifest-path=/etc/kubernetes/manifests
    --pod-infra-container-image=pause-amd64:{{ pause_version }}

